package org.jhipster.findelec.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ObjetAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetAllPropertiesEquals(Objet expected, Objet actual) {
        assertObjetAutoGeneratedPropertiesEquals(expected, actual);
        assertObjetAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetAllUpdatablePropertiesEquals(Objet expected, Objet actual) {
        assertObjetUpdatableFieldsEquals(expected, actual);
        assertObjetUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetAutoGeneratedPropertiesEquals(Objet expected, Objet actual) {
        assertThat(expected)
            .as("Verify Objet auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetUpdatableFieldsEquals(Objet expected, Objet actual) {
        assertThat(expected)
            .as("Verify Objet relevant properties")
            .satisfies(e -> assertThat(e.getNom()).as("check nom").isEqualTo(actual.getNom()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getStatut()).as("check statut").isEqualTo(actual.getStatut()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetUpdatableRelationshipsEquals(Objet expected, Objet actual) {
        assertThat(expected)
            .as("Verify Objet relationships")
            .satisfies(e -> assertThat(e.getUtilisateur()).as("check utilisateur").isEqualTo(actual.getUtilisateur()));
    }
}
