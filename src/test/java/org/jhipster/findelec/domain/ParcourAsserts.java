package org.jhipster.findelec.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ParcourAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParcourAllPropertiesEquals(Parcour expected, Parcour actual) {
        assertParcourAutoGeneratedPropertiesEquals(expected, actual);
        assertParcourAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParcourAllUpdatablePropertiesEquals(Parcour expected, Parcour actual) {
        assertParcourUpdatableFieldsEquals(expected, actual);
        assertParcourUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParcourAutoGeneratedPropertiesEquals(Parcour expected, Parcour actual) {
        assertThat(expected)
            .as("Verify Parcour auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParcourUpdatableFieldsEquals(Parcour expected, Parcour actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertParcourUpdatableRelationshipsEquals(Parcour expected, Parcour actual) {}
}
